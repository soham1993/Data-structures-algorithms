# Node class
"" this function finds a node from the end of the linked list"""
class Node:
     
    # Function to initialise the node object
    def __init__(self, data):
        self.data = data # Assign data
        self.next = None # Initialize next as null
 
# Linked List class
class LinkedList:
    def __init__(self):
        self.head = None # Initialize head as None
 
    # This function insert a new node at the
    # beginning of the linked list
    def push(self, new_data):
     
        # Create a new Node
        new_node = Node(new_data)
 
        # 3. Make next of new Node as head
        new_node.next = self.head
 
        # 4. Move the head to point to new Node
        self.head = new_node
        
    def printlist(self):
        temp=self.head
        while(temp):
            print(temp.data)
            temp=temp.next
    def lengthlist(self):
        
        temp=self.head
        
        len=0
        while(temp):
            len=len+1
            temp=temp.next
        print(len)
        return len
        
 
   # this function finds the elementof the node 
    def findnodefromend(self, x):
        #finding the length of the linkedlist
       
        index=self.lengthlist()-x #getting the length of the linkedlist
        if (index<0):
            print("Wrong Entry")
            return
        else:
            temp=self.head
            if(temp==None):
                
                
    
                print("linked list is empty")
            else:
                
                count=0
                while(temp):
                    
                    
                    
                    if(count==index):
                        
                        
                        return(temp.data)
                else:
                    temp=temp.next
                    count=count+1
            
        
        
      
 
# Code execution starts here
if __name__ == '__main__':
 
    # Start with the empty list
    llist = LinkedList()
 
    ''' Use push() to construct below list
        1->10->30->14-'''
    llist.push(14);
    llist.push(30);
    llist.push(10);
    llist.push(1);
    llist.printlist();
    num=llist.findnodefromend(3)
    print(num)
   
   
   
